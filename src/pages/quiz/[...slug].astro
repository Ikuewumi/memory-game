---
import type { CuizMetadataProps } from "@/types"
import CuizMetadata from '@/components/CuizMetadata.astro';
import CuizWalkthrough from '@/components/CuizWalkthrough.svelte';
import { encodeString } from '@/composables/engine';
import Base from '@/layouts/Base.astro';
import { getCollection, getEntry, type CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const entries = await getCollection('quiz');
  return entries.map(entry => ({
    params: { slug: entry.id }, props: { entry },
  }));
}


interface Props {
  entry: CollectionEntry<"quiz">
}

const { entry } = Astro.props;

const course = await getEntry("course", entry.data.course.id)
const author = await getEntry("author", entry.data.author.id)
const encodedString = encodeString(JSON.stringify(entry.data))

const metadata: CuizMetadataProps = {
  title: entry.data.title,
  date: entry.data.date,
  description: entry.data.description,
  image: entry.data.image,
  difficulty: entry.data.difficulty,
  questionCount: entry.data.questions.length,
  author: author.data.name,
  authorImage: author.data.image,
  course: course.data.title,
  courseLink: course.id,
  
}
---

<Base title="Cuiz | A Sample Page">


	<CuizMetadata data={metadata} />
        <CuizWalkthrough client:only="svelte" slug={entry.id} cuizDataString={encodedString} />
    

</Base>
